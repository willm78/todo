{"version":3,"sources":["TodoItem.js","Todo.js","CompleteTodo.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","todoItem","margin","concat","spacing","unit","props","classes","selected","onSelect","onDeselect","children","react_default","a","createElement","ClickAwayListener_default","onClickAway","ListItem_default","onClick","dense","component","Paper","className","Todo","state","isModifying","value","_this","onModify","setState","onChange","e","target","onUpdate","onKeyPress","key","_this$props","this","idx","onComplete","onDelete","_this$state","curValue","src_TodoItem","ListItemText_default","Input_default","type","placeholder","input","IconButton_default","iconBtn","Save_default","Delete_default","color","Edit_default","Check_default","Component","width","padding","onRevert","Undo_default","App","curVal","nextId","todos","completed","onAddTodo","_ref","length","Object","objectSpread","defineProperty","_ref2","_ref3","toComplete","objectWithoutProperties","map","_toPropertyKey","_ref4","_ref5","toRevert","rest","_this2","Grid_default","container","justify","item","xs","md","xl","Paper_default","paper","newTodo","autoFocus","disabled","NoteAdd_default","Typography_default","variant","Divider_default","List_default","list","keys","src_Todo","CompleteTodo","minHeight","display","flex","Boolean","window","location","hostname","match","createMuiTheme","palette","ReactDOM","render","styles","CssBaseline_default","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5c7cbf5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  todoItem: {\r\n    margin: `${theme.spacing.unit}px 0`,\r\n  },\r\n});\r\n\r\nfunction TodoItem(props) {\r\n  const { classes, selected, onSelect, onDeselect, children } = props;\r\n  return (\r\n    <ClickAwayListener onClickAway={onDeselect}>\r\n      <ListItem\r\n        selected={selected}\r\n        onClick={onSelect}\r\n        dense\r\n        component={Paper}\r\n        className={classes.todoItem}\r\n      >\r\n        {children}\r\n      </ListItem>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(TodoItem);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = theme => ({\r\n  input: {\r\n    width: '100%',\r\n  },\r\n  iconBtn: {\r\n    padding: theme.spacing.unit,\r\n    margin: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass Todo extends Component {\r\n  state = {\r\n    isModifying: false,\r\n    value: this.props.value,\r\n  };\r\n\r\n  onModify = () => this.setState({ isModifying: true });\r\n\r\n  onChange = e => this.setState({ value: e.target.value });\r\n\r\n  onUpdate = () => {\r\n    const { onUpdate } = this.props;\r\n    const { value } = this.state;\r\n    this.setState({ isModifying: false });\r\n    return onUpdate(value);\r\n  };\r\n\r\n  onKeyPress = e => {\r\n    return e.key === 'Enter' ? this.onUpdate() : null;\r\n  };\r\n\r\n  onDeselect = () => {\r\n    const { onDeselect } = this.props;\r\n    this.setState({\r\n      isModifying: false,\r\n      value: this.props.value,\r\n    });\r\n    onDeselect();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      idx,\r\n      selected,\r\n      onSelect,\r\n      onComplete,\r\n      onDelete,\r\n      value,\r\n    } = this.props;\r\n    const { isModifying, value: curValue } = this.state;\r\n    return isModifying ? (\r\n      <TodoItem\r\n        selected={selected}\r\n        onSelect={onSelect}\r\n        onDeselect={this.onDeselect}\r\n      >\r\n        <ListItemText>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder={value}\r\n            onChange={this.onChange}\r\n            onKeyPress={this.onKeyPress}\r\n            value={curValue}\r\n            className={classes.input}\r\n          />\r\n        </ListItemText>\r\n        <IconButton onClick={this.onUpdate} className={classes.iconBtn}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n        <IconButton onClick={onDelete} className={classes.iconBtn}>\r\n          <DeleteIcon color=\"error\" />\r\n        </IconButton>\r\n      </TodoItem>\r\n    ) : (\r\n      <TodoItem\r\n        selected={selected}\r\n        onSelect={onSelect}\r\n        onDeselect={this.onDeselect}\r\n      >\r\n        <ListItemText>{`${idx + 1}. ${value}`}</ListItemText>\r\n        <IconButton onClick={this.onModify} className={classes.iconBtn}>\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={onComplete} className={classes.iconBtn}>\r\n          <CheckIcon color=\"action\" />\r\n        </IconButton>\r\n      </TodoItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Todo);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = theme => ({\r\n  iconBtn: {\r\n    padding: theme.spacing.unit,\r\n    margin: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass Todo extends Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      idx,\r\n      selected,\r\n      onSelect,\r\n      onDeselect,\r\n      onRevert,\r\n      value,\r\n    } = this.props;\r\n    return (\r\n      <TodoItem selected={selected} onSelect={onSelect} onDeselect={onDeselect}>\r\n        <ListItemText>{`${idx + 1}. ${value}`}</ListItemText>\r\n        <IconButton onClick={onRevert} className={classes.iconBtn}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n      </TodoItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Todo);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Input from '@material-ui/core/Input';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Todo from './Todo';\r\nimport CompleteTodo from './CompleteTodo';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: theme.spacing.unit * 2,\r\n    minHeight: '90vh',\r\n  },\r\n  newTodo: {\r\n    display: 'flex',\r\n    margin: theme.spacing.unit,\r\n    padding: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    flex: '1 1 auto',\r\n  },\r\n  iconBtn: {\r\n    padding: theme.spacing.unit,\r\n    margin: theme.spacing.unit / 2,\r\n    flex: '0 0 auto',\r\n  },\r\n  list: {\r\n    padding: theme.spacing.unit,\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    curVal: '',\r\n    nextId: 0,\r\n    selected: null,\r\n    todos: {},\r\n    completed: {},\r\n  };\r\n\r\n  onKeyPress = e => {\r\n    return e.key === 'Enter' ? this.onAddTodo() : null;\r\n  };\r\n\r\n  onChange = e => {\r\n    return e.key === 'Enter' ? null : this.setState({ curVal: e.target.value });\r\n  };\r\n\r\n  onAddTodo = () =>\r\n    this.setState(({ curVal, nextId, todos }) => {\r\n      return curVal.length\r\n        ? {\r\n            curVal: '',\r\n            nextId: nextId + 1,\r\n            todos: { ...todos, [nextId]: curVal },\r\n          }\r\n        : null;\r\n    });\r\n\r\n  onSelect = key => () => this.setState({ selected: key });\r\n\r\n  onDeselect = () => this.setState({ selected: null });\r\n\r\n  onUpdate = key => value => {\r\n    this.setState(({ todos }) => ({\r\n      todos: { ...todos, [key]: value },\r\n      selected: null,\r\n    }));\r\n  };\r\n\r\n  onComplete = key => () => {\r\n    this.setState(({ todos, completed }) => {\r\n      const { [key]: toComplete, ...rest } = todos;\r\n      return {\r\n        todos: rest,\r\n        completed: { ...completed, [key]: toComplete },\r\n      };\r\n    });\r\n  };\r\n\r\n  onDelete = key => () => {\r\n    this.setState(({ todos }) => {\r\n      const { [key]: toDelete, ...rest } = todos;\r\n      return {\r\n        todos: rest,\r\n      };\r\n    });\r\n  };\r\n\r\n  onRevert = key => () => {\r\n    this.setState(({ todos, completed }) => {\r\n      const { [key]: toRevert, ...rest } = completed;\r\n      return {\r\n        todos: { ...todos, [key]: toRevert },\r\n        completed: rest,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { curVal, selected, todos, completed } = this.state;\r\n    return (\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} md={9} xl={7}>\r\n          <Paper className={classes.paper}>\r\n            <div className={classes.newTodo}>\r\n              <Input\r\n                type=\"text\"\r\n                autoFocus={true}\r\n                placeholder=\"...new todo\"\r\n                onChange={this.onChange}\r\n                onKeyPress={this.onKeyPress}\r\n                value={curVal}\r\n                className={classes.input}\r\n              />\r\n              <IconButton\r\n                disabled={!curVal}\r\n                onClick={this.onAddTodo}\r\n                className={classes.iconBtn}\r\n              >\r\n                <NoteAddIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\">Current</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider />\r\n            <List className={classes.list}>\r\n              {Object.keys(todos).map((key, idx) => (\r\n                <Todo\r\n                  key={key}\r\n                  idx={idx}\r\n                  selected={selected === key}\r\n                  onSelect={this.onSelect(key)}\r\n                  onDeselect={this.onDeselect}\r\n                  onUpdate={this.onUpdate(key)}\r\n                  onComplete={this.onComplete(key)}\r\n                  onDelete={this.onDelete(key)}\r\n                  value={todos[key]}\r\n                />\r\n              ))}\r\n            </List>\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\">Completed</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider />\r\n            <List className={classes.list}>\r\n              {Object.keys(completed).map((key, idx) => (\r\n                <CompleteTodo\r\n                  key={key}\r\n                  idx={idx}\r\n                  selected={selected === key}\r\n                  onSelect={this.onSelect(key)}\r\n                  onDeselect={this.onDeselect}\r\n                  onRevert={this.onRevert(key)}\r\n                  value={completed[key]}\r\n                />\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nfunction Root() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}